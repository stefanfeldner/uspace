---
openapi: 3.0.0
info:
  title: uspace API docs
  version: 1.0.0
paths:
  "/users":
    post:
      summary: creates new user
      description: Takes the user data and creates a new user.
      tags:
      - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/User"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserResponse"
                
  "/users/{id}":
    get:
      summary: get user by id
      tags:
      - Users
      parameters:
      - in: path
        name: id
        required: true
        description: string user id sub
        example: 123asd
        schema:
          type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotFoundError"

  "/spaces/{owner}/{page}":
    get:
      summary: get required number of spaces based on the selected page
      description: Takes 20 of own spaces, 20 of other spaces and returns all populated
        data (posts, comments)
      tags:
      - Spaces
      parameters:
      - in: path
        name: owner
        required: true
        description: string user sub
        schema:
          type: string
      - in: path
        name: page
        required: true
        description: number of selected page first page 0
        schema:
          type: integer
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AllSpacesResponse"
  "/spaces":
    post:
      summary: creates new space
      description: Takes the space data and creates a new space.
      tags:
      - Spaces
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Space"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SpaceResponse"
  "/spaces/{spaceId}":
    delete:
      summary: deletes space by id
      tags:
      - Spaces
      parameters:
      - in: path
        name: spaceId
        required: true
        description: numeric space id
        schema:
          type: integer
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SpaceResponse"
  "/posts":
    post:
      summary: creates new post
      description: Takes the post data and creates a new post.
      tags:
      - Posts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Post"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PostResponse"
  "/posts/{postId}":
    delete:
      summary: deletes post by id
      tags:
      - Posts
      parameters:
      - in: path
        name: postId
        required: true
        description: numeric post id
        schema:
          type: integer
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PostResponse"
  "/comments":
    post:
      summary: creates new comment
      description: Takes the post data and creates a new post.
      tags:
      - Comments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Comment"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CommentResponse"
  "/comments/{commentId}":
    delete:
      summary: creates new comment
      description: Takes the post data and creates a new post.
      tags:
      - Comments
      parameters:
      - in: path
        name: commentId
        required: true
        description: numeric comment id
        schema:
          type: integer
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CommentResponse"
components:
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          format: email
        email_verified:
          type: boolean
        username:
          type: string
        picture_url:
          type: string
        sub:
          type: string
      required:
      - email
      - username
      - sub
      example:
        sub: 5ebac534954b54139806c112
        email: fake@example.com
        email_verified: true
        username: fake name
        picture_url: https://asdfasdfsadfsd

    Space:
      type: object
      properties:
        owner:
          type: string
        name:
          type: string
        description:
          type: string
      required:
      - owner
      - name
      - description
      example:
        owner: 5ebac534954b54139806c112
        name: Otters are awesome
        description: space to celebrate otters

    Post:
      type: object
      properties:
        space_id:
          type: integer
        user_id:
          type: string
        title:
          type: string
        tags:
          type: string
        content:
          type: string
      required:
      - space_id
      - user_id
      - title
      - content
      example:
        space_id: 123
        user_id: 5ebac534954b54139806c112
        title: Did you know...
        content: "...that otters hold hands when they sleep?"
        tags: otters, cute, fluffy

    Comment:
      type: object
      properties:
        user_id:
          type: string
        post_id:
          type: integer
        content:
          type: string
      required:
      - user_id
      - post_id
      - content
      example:
        post_id: 234
        user_id: 5ebac534954b54139806c112
        content: "OMG thats the cutest thing s2 \U0001F9A6!!"

    UserResponse:
      type: object
      properties:
        email:
          type: string
          x-faker: internet.email
        sub:
          type: string
          x-faker: datatype.uuid
        email_verified:
          type: boolean
        username:
          type: string
          x-faker: internet.userName
        picture_url:
          type: string
          x-faker: image.imageUrl
      example:
        email: iloveooters@gmail.com
        email_verified: true
        sub: 89bd9d8d-69a6-474e-8f46-7cc8796ed151
        username: OtterLover
        picture_url: https://asdfasdfsadfsd
        created_at: '2022-05-02T14:16:43.152Z'

    PostResponse:
      type: object
      properties:
        email:
          type: string
          x-faker: internet.email
        sub:
          type: string
          x-faker: datatype.uuid
        email_verified:
          type: boolean
        username:
          type: string
          x-faker: internet.userName
        picture_url:
          type: string
          x-faker: image.imageUrl
      example:
        email: iloveooters@gmail.com
        email_verified: true
        sub: 89bd9d8d-69a6-474e-8f46-7cc8796ed151
        username: OtterLover
        picture_url: https://asdfasdfsadfsd
        created_at: '2022-05-02T14:16:43.152Z'

    SpaceResponse:
      type: object
      properties:
        space_id:
          type: number
          x-faker: datatype.number
        name:
          type: string
          x-faker: lorem.word
        owner:
          type: string
          x-faker: datatype.uuid
        description:
          type: string
          x-faker: lorem.words
        created_at:
          type: string
        post:
          type: array
          items:
            "$ref": "#/components/schemas/Post"
        space_colab: 
          type: array
          items:
            "$ref": "#/components/schemas/Space"
      example:
        space_id: 13
        name: "I Love"
        owner: 89bd9d8d-69a6-474e-8f46-7cc8796ed151
        description: "Love love s2"
        created_at: '2022-05-02T14:16:43.152Z'

    AllSpacesResponse:
      type: array
      items:
        $ref: '#/components/schemas/SpaceResponse'
      example: 
        - space_id: 16
          name: 'Otters are awesome ahaha'
          owner: '5ebac534954b54139806c117'
          description: 'space to celebrate otters'
          created_at: '2022-05-02T16:10:24.150Z'
          post: []
          space_colab: []
        - space_id: 17
          name: 'Otters are awesome lol ahaha'
          owner: '5ebac534954b54139806c114'
          description: 'space to celebrate otters'
          created_at: '2022-05-02T16:10:33.392Z'
          post: []
          space_colab: []

    CommentResponse:
      type: object  
      properties:
        comment_id:
          type: number
          x-faker: datatype.number
        user_id:
          type: string
          x-faker: datatype.uuid
        post_id:
          type: number
        content:
          type: string
          x-faker: lorem.words
        created_at:
          type: string
      example:
        comment_id: 13
        user_id: 89bd9d8d-69a6-474e-8f46-7cc8796ed151
        post_id: 7
        content: "OtterLover"
        created_at: '2022-05-02T14:16:43.152Z'

    NotFoundError:
      type: object  
      properties:
        code:
          type: string
        message: 
          type: string
      required:
        - code
        - message

tags:
- name: Users
  description: User management and retrieval
- name: Spaces
  description: Spaces management and retrieval
- name: Posts
  description: Posts management and retrieval
- name: Comments
  description: Comments management and retrieval
